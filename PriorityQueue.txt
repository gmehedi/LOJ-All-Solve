#include<stdio.h>
#define SIZE 52

int items[SIZE];
int front = -1, back =-1;

void sort()
{
    for(int i=0; i<back-1; i++)
    {
        for(int j=i+1; j<back; j++)
        {
            if(items[i]<items[j])
            {
                items[i] ^= items[j],
                items[j] ^= items[i],
                items[i] ^= items[j];
            }
        }
    }
}

int Overloaded()
{
    if( (front == back + 1) ) return 1;
    else if( front == 0 && back == SIZE-1) return 1;
    return 0;
}

int Empty()
{
    if(front == -1) return 1;
    return 0;
}

void Push(int element)
{
    if(Overloaded()) printf("Queue is full \n");
    else
    {
        if(front == -1) front = 0;
        back = (back + 1) % SIZE;
        items[back] = element;
        printf("Inserted %d\n", element);
    }
    sort();
}


void Pop()
{
    int element;
    if(Empty())
    {
        printf("Queue is empty\n");
        return;

    }
    else
    {
        element = items[front];
        if (front == back)
        {
            front = -1;
            back = -1;
        }
        else
        {
            front = (front + 1) % SIZE;
        }
        printf("Removed element  %d \n", element);

        return;
    }
}


void Show()
{
    int i;
    if(isEmpty()) printf("Empty Queue\n");
    else
    {
        printf("The front element is %d\n",items[front]);
    }

}

int main()
{


    while(1)
    {
        int chos,element,temp;
        printf("Enter 1 for Push\nEnter 2 for Pop\nEnter 3 for show Queue\nEnter 4 for Exit\n\n");
        scanf("%d",&chos);

         if(chos == 1)
        {
            printf("Enter the element\n");
            int temp;
            scanf("%d",&temp);
            Push(temp);
        }
        else if(chos == 2)
        {
          Pop();
        }
        else if(chos == 3)
        {
           Show();
        }
        else return 0;

    }



    return 0;
}
